// This is a fragment from ../examples/My_GrammarParser.Castle

   peg_grammar     <-  rule+ ;
   rule	           <-  rule_name '<-' ordered_choice ';' ;
   ordered_choice  <-  sequence  ('|' sequence)* ;
   sequence	   <-  prefix* ;
   prefix 	   <- ( AND | NOT )? suffix ;
   suffix	   <- expression ( '?' | '*' | '+' | '#' )? ;
   expression	   <- regex_term
   		   |  rule_crossref
		   |  '(' ordered_choice ')'
		   |  str_term
		   ;
   rule_crossref   <- rule_name;
   rule_name	   <- ID ;
   str_term	   <- "'"    str_no_s1  "'"
   		   |  '"'    str_no_d1  '"'
		   |  "'''"  str_no_s3  "'''"
		   |  '"""'  str_no_d3  '"""'
                   ;
   regex_term	   <- '/'     str_no_slash  '/'
   		   |  "r'"    str_no_s1  "'"
   		   |  'r"'    str_no_d1  '"'
		   |  "r'''"  str_no_s3  "'''"
		   |  'r"""'  str_no_d3  '"""'
   		   |  "R'"    str_no_s1  "'"
   		   |  'R"'    str_no_d1  '"'
		   |  "R'''"  str_no_s3  "'''"
		   |  'R"""'  str_no_d3  '"""'
		   ;
   str_no_slash    <- /((\\/)|[^\/])*/ ;
   str_no_XXX      <- XXX
         	   |  ETC
		   ;
   AND 		   <- '&' ;
   NOT 		   <- '!' ;

