@startuml

abstract AST_BASE {
  _parse_tree
  position()
  position_end()
  serialize()
}

class ID {
  name
  validate_or_raise()
}

ID  =|> AST_BASE

package Peg #0077ff {

abstract PEG
PEG ==|>   AST_BASE

package MixIns  #Gray {

  class MixIn_value_attribute<MixIn> {
  _value
  value()
  }

  class MixIn_expr_attribute<MixIn> {
  _expr
  expr()
  }

  class MixIn_children_tuple<MixIn> {
   _children :Tuple
  __len__()
  __getitem__()
  __iter__()
  }
}


abstract Terminal
Terminal   ==|> PEG
Terminal  ---|> MixIn_value_attribute
StrTerm    ==|> Terminal
RexExpTerm ==|> Terminal
Number     ==|> Terminal

abstract Markers #ORANGE
Markers    ==|> PEG
annotation EOF #ORANGE
EOF 	   ==|> Markers

abstract NonTerminal
NonTerminal ==|> PEG
abstract Expression
Expression  ==|> NonTerminal

class Setting  {
 name  : ID
 value
}
Setting ==|> PEG
Setting ---> ID

class Rule {
  name  :ID
  expr  :[] Expression
}
Rule ==|> NonTerminal
Rule ---> ID
Rule ---> Expression

interface Rules
Rules     ==|> PEG
Rules    ---|> MixIn_children_tuple

ParseRules ==|> Rules
Settings   ==|> Rules


class Grammar {
  +all_rules    :Rules
  -parse_rules  :ParseRules
  -settings     :Settings
}
Grammar ==|> NonTerminal


abstract Group
Group            ==|> Expression
UnorderedGroup   ==|> Group
UnorderedGroup  ---|> MixIn_expr_attribute
abstract Quantity
Quantity         ==|> Group
Quantity        ---|> MixIn_expr_attribute

Sequence         ==|> Expression
Sequence        ---|> MixIn_children_tuple

OrderedChoice    ==|> Expression
OrderedChoice   ---|> MixIn_children_tuple

'========================
class Optional   << (?, #0077ff) >>
Optional	 ==|> Quantity
class ZeroOrMore << (*, #0077ff) >>
ZeroOrMore	 ==|> Quantity
class OneOrMore  << (+, #0077ff) >>
OneOrMore	 ==|> Quantity

abstract Predicate
Predicate	 ==|> Expression
Predicate       ---|> MixIn_expr_attribute
class AndPredicate << (&, #0077ff) notconsuming >>
AndPredicate     ==|> Predicate
class NotPredicate << (! ,#0077ff) not consuming >>
NotPredicate     ==|> Predicate





}
@enduml














