@startuml


package Classes <<Cloud>> {
class EventProtocol
class Specialise
EventProtocol <|- Specialise
}

'StartSieve = EventProtocol(ID('StartSieve'),
'                              events=(
'                                   Event(name=ID('runTo'),  return_type=None, typedParameters=(TypedParameter(name='max', type=int),)),
'                                   Event(name=ID('newMax'), return_type=None, typedParameters=(TypedParameter(name='max', type=int),))))
object StartSieve {
 events = [runTo, newMax]
}
EventProtocol <--- StartSieve


'SlowStart = EventProtocol(ID('SlowStart'),
'                              typedParameters=(TypedParameter(name='queue_max', type=int),),
'                              events=(
'                                   Event(name=ID('setMax'), return_type=None, typedParameters=(TypedParameter(name='queue_max', type=int),)),))
object SlowStart {
 typedParameters = (queue_max :int,)
 events          = [setMax]
}
EventProtocol <--- SlowStart


'SlowStart_1 = Specialise(ID("SlowStart_1"),
'                              based_on=SlowStart,
'                              #OR: arguments=(Argument(name=queue_max, value=1),))
'                              arguments=(Argument(value=1),))
object SlowStart_1 {
  based_on   = SlowStart
  arguments = (queue_max=1)
}
Specialise <-- SlowStart_1
SlowStart  <|- SlowStart_1

'SimpleSieve = EventProtocol(ID('SimpleSieve'),
'                              based_on=SlowStart_1,
'                              events=(
'                                   Event(name=ID('input'), return_type=None, typedParameters=(TypedParameter(name='try', type=int),)),))
object SimpleSieve {
 based_on   = SlowStart_1
 events          = [input]
}
EventProtocol <--- SimpleSieve
SlowStart_1   <|- SimpleSieve

@enduml
