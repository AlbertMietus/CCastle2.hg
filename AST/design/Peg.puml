@startuml
abstract AST_BASE {
  _parse_tree
  start()
  end()
}

package Peg #0077ff {

abstract PEG
AST_BASE <|== PEG

PEG      <|== NonTerminal
PEG      <|== Terminal
PEG      <|== Setting
PEG      <|..... Markers
Markers  <|== EOF
annotation Markers
annotation EOF



abstract Terminal
Terminal <|== StrTerm
Terminal <|== RexExpTerm

abstract NonTerminal
NonTerminal  <|== Grammar
NonTerminal  <|== Rule
NonTerminal  <|== Expression

class Grammar {
  rules
  settings
}
Grammar --> "*" Rule : rules
Grammar --> "*" Setting

class Rule {
 name :ID
 peg_expression
}
Rule  -> "*" Expression

class Setting  {
 name  : ID
 value : ...
}

abstract Expression {
 subEexpression Or Terminal
}
Expression -->  Terminal
Expression -->  Expression


Expression <|== ManyExpression
Expression <|== Group
Expression <|== Sequence
Expression <|== OrderedChoice
Expression <|== Predicate

abstract ManyExpression
abstract Predicate

ManyExpression <== Optional
ManyExpression <== OneOrMore
ManyExpression <== ZeroOrMore

Predicate <== AndPredicate
Predicate <== NotPredicate

class AndPredicate << (&, #0077ff) notconsuming >>
class NotPredicate << (! ,#0077ff) not consuming >>

class Optional   << (?, #0077ff) >>
class OneOrMore  << (+, #0077ff) >>
class ZeroOrMore << (*, #0077ff) >>

}
@enduml
